// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class SetBoolRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SetBoolRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSetBoolRequest(bb:flatbuffers.ByteBuffer, obj?:SetBoolRequest):SetBoolRequest {
  return (obj || new SetBoolRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSetBoolRequest(bb:flatbuffers.ByteBuffer, obj?:SetBoolRequest):SetBoolRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SetBoolRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

data():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startSetBoolRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addData(builder:flatbuffers.Builder, data:boolean) {
  builder.addFieldInt8(0, +data, +false);
}

static endSetBoolRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSetBoolRequest(builder:flatbuffers.Builder, data:boolean):flatbuffers.Offset {
  SetBoolRequest.startSetBoolRequest(builder);
  SetBoolRequest.addData(builder, data);
  return SetBoolRequest.endSetBoolRequest(builder);
}
}
