// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { MsgMetadata } from '../../fb/msg-metadata.js';


export class NavSatStatus {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):NavSatStatus {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNavSatStatus(bb:flatbuffers.ByteBuffer, obj?:NavSatStatus):NavSatStatus {
  return (obj || new NavSatStatus()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNavSatStatus(bb:flatbuffers.ByteBuffer, obj?:NavSatStatus):NavSatStatus {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new NavSatStatus()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

_Metadata(obj?:MsgMetadata):MsgMetadata|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MsgMetadata()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

status():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

service():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

static startNavSatStatus(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_Metadata(builder:flatbuffers.Builder, _MetadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, _MetadataOffset, 0);
}

static addStatus(builder:flatbuffers.Builder, status:number) {
  builder.addFieldInt8(1, status, 0);
}

static addService(builder:flatbuffers.Builder, service:number) {
  builder.addFieldInt16(2, service, 0);
}

static endNavSatStatus(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createNavSatStatus(builder:flatbuffers.Builder, _MetadataOffset:flatbuffers.Offset, status:number, service:number):flatbuffers.Offset {
  NavSatStatus.startNavSatStatus(builder);
  NavSatStatus.add_Metadata(builder, _MetadataOffset);
  NavSatStatus.addStatus(builder, status);
  NavSatStatus.addService(builder, service);
  return NavSatStatus.endNavSatStatus(builder);
}
}
