// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { MsgMetadata } from '../../fb/msg-metadata.js';


export class Altitude {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Altitude {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAltitude(bb:flatbuffers.ByteBuffer, obj?:Altitude):Altitude {
  return (obj || new Altitude()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAltitude(bb:flatbuffers.ByteBuffer, obj?:Altitude):Altitude {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Altitude()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

_Metadata(obj?:MsgMetadata):MsgMetadata|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MsgMetadata()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

monotonic():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

amsl():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

local():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

relative():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

terrain():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

bottomClearance():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startAltitude(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static add_Metadata(builder:flatbuffers.Builder, _MetadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, _MetadataOffset, 0);
}

static addMonotonic(builder:flatbuffers.Builder, monotonic:number) {
  builder.addFieldFloat32(1, monotonic, 0.0);
}

static addAmsl(builder:flatbuffers.Builder, amsl:number) {
  builder.addFieldFloat32(2, amsl, 0.0);
}

static addLocal(builder:flatbuffers.Builder, local:number) {
  builder.addFieldFloat32(3, local, 0.0);
}

static addRelative(builder:flatbuffers.Builder, relative:number) {
  builder.addFieldFloat32(4, relative, 0.0);
}

static addTerrain(builder:flatbuffers.Builder, terrain:number) {
  builder.addFieldFloat32(5, terrain, 0.0);
}

static addBottomClearance(builder:flatbuffers.Builder, bottomClearance:number) {
  builder.addFieldFloat32(6, bottomClearance, 0.0);
}

static endAltitude(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAltitude(builder:flatbuffers.Builder, _MetadataOffset:flatbuffers.Offset, monotonic:number, amsl:number, local:number, relative:number, terrain:number, bottomClearance:number):flatbuffers.Offset {
  Altitude.startAltitude(builder);
  Altitude.add_Metadata(builder, _MetadataOffset);
  Altitude.addMonotonic(builder, monotonic);
  Altitude.addAmsl(builder, amsl);
  Altitude.addLocal(builder, local);
  Altitude.addRelative(builder, relative);
  Altitude.addTerrain(builder, terrain);
  Altitude.addBottomClearance(builder, bottomClearance);
  return Altitude.endAltitude(builder);
}
}
