// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { MsgMetadata } from '../../fb/msg-metadata.js';


export class eventRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):eventRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAseventRequest(bb:flatbuffers.ByteBuffer, obj?:eventRequest):eventRequest {
  return (obj || new eventRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAseventRequest(bb:flatbuffers.ByteBuffer, obj?:eventRequest):eventRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new eventRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

_Metadata(obj?:MsgMetadata):MsgMetadata|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MsgMetadata()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

uavId():string|null
uavId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
uavId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

data():string|null
data(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
data(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static starteventRequest(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_Metadata(builder:flatbuffers.Builder, _MetadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, _MetadataOffset, 0);
}

static addUavId(builder:flatbuffers.Builder, uavIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, uavIdOffset, 0);
}

static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, dataOffset, 0);
}

static endeventRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createeventRequest(builder:flatbuffers.Builder, _MetadataOffset:flatbuffers.Offset, uavIdOffset:flatbuffers.Offset, dataOffset:flatbuffers.Offset):flatbuffers.Offset {
  eventRequest.starteventRequest(builder);
  eventRequest.add_Metadata(builder, _MetadataOffset);
  eventRequest.addUavId(builder, uavIdOffset);
  eventRequest.addData(builder, dataOffset);
  return eventRequest.endeventRequest(builder);
}
}
