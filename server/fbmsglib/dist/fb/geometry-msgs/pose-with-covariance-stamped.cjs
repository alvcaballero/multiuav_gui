'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.PoseWithCovarianceStamped = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var pose_with_covariance_js_1 = require('../../fb/geometry-msgs/pose-with-covariance.cjs');
var header_js_1 = require('../../fb/std-msgs/header.cjs');
var PoseWithCovarianceStamped = /** @class */ (function () {
  function PoseWithCovarianceStamped() {
    this.bb = null;
    this.bb_pos = 0;
  }
  PoseWithCovarianceStamped.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  PoseWithCovarianceStamped.getRootAsPoseWithCovarianceStamped = function (bb, obj) {
    return (obj || new PoseWithCovarianceStamped()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  PoseWithCovarianceStamped.getSizePrefixedRootAsPoseWithCovarianceStamped = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new PoseWithCovarianceStamped()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  PoseWithCovarianceStamped.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  PoseWithCovarianceStamped.prototype.header = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? (obj || new header_js_1.Header()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
  };
  PoseWithCovarianceStamped.prototype.pose = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset
      ? (obj || new pose_with_covariance_js_1.PoseWithCovariance()).__init(
          this.bb.__indirect(this.bb_pos + offset),
          this.bb
        )
      : null;
  };
  PoseWithCovarianceStamped.startPoseWithCovarianceStamped = function (builder) {
    builder.startObject(3);
  };
  PoseWithCovarianceStamped.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  PoseWithCovarianceStamped.addHeader = function (builder, headerOffset) {
    builder.addFieldOffset(1, headerOffset, 0);
  };
  PoseWithCovarianceStamped.addPose = function (builder, poseOffset) {
    builder.addFieldOffset(2, poseOffset, 0);
  };
  PoseWithCovarianceStamped.endPoseWithCovarianceStamped = function (builder) {
    var offset = builder.endObject();
    builder.requiredField(offset, 6); // header
    builder.requiredField(offset, 8); // pose
    return offset;
  };
  return PoseWithCovarianceStamped;
})();
exports.PoseWithCovarianceStamped = PoseWithCovarianceStamped;
