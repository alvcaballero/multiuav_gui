'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.TwistStamped = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var twist_js_1 = require('../../fb/geometry-msgs/twist.cjs');
var header_js_1 = require('../../fb/std-msgs/header.cjs');
var TwistStamped = /** @class */ (function () {
  function TwistStamped() {
    this.bb = null;
    this.bb_pos = 0;
  }
  TwistStamped.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  TwistStamped.getRootAsTwistStamped = function (bb, obj) {
    return (obj || new TwistStamped()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  TwistStamped.getSizePrefixedRootAsTwistStamped = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new TwistStamped()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  TwistStamped.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  TwistStamped.prototype.header = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? (obj || new header_js_1.Header()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
  };
  TwistStamped.prototype.twist = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? (obj || new twist_js_1.Twist()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
  };
  TwistStamped.startTwistStamped = function (builder) {
    builder.startObject(3);
  };
  TwistStamped.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  TwistStamped.addHeader = function (builder, headerOffset) {
    builder.addFieldOffset(1, headerOffset, 0);
  };
  TwistStamped.addTwist = function (builder, twistOffset) {
    builder.addFieldOffset(2, twistOffset, 0);
  };
  TwistStamped.endTwistStamped = function (builder) {
    var offset = builder.endObject();
    builder.requiredField(offset, 6); // header
    builder.requiredField(offset, 8); // twist
    return offset;
  };
  return TwistStamped;
})();
exports.TwistStamped = TwistStamped;
