'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.Vector3 = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var Vector3 = /** @class */ (function () {
  function Vector3() {
    this.bb = null;
    this.bb_pos = 0;
  }
  Vector3.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  Vector3.getRootAsVector3 = function (bb, obj) {
    return (obj || new Vector3()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  Vector3.getSizePrefixedRootAsVector3 = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new Vector3()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  Vector3.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Vector3.prototype.x = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
  };
  Vector3.prototype.y = function () {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
  };
  Vector3.prototype.z = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
  };
  Vector3.startVector3 = function (builder) {
    builder.startObject(4);
  };
  Vector3.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  Vector3.addX = function (builder, x) {
    builder.addFieldFloat64(1, x, 0.0);
  };
  Vector3.addY = function (builder, y) {
    builder.addFieldFloat64(2, y, 0.0);
  };
  Vector3.addZ = function (builder, z) {
    builder.addFieldFloat64(3, z, 0.0);
  };
  Vector3.endVector3 = function (builder) {
    var offset = builder.endObject();
    return offset;
  };
  Vector3.createVector3 = function (builder, _MetadataOffset, x, y, z) {
    Vector3.startVector3(builder);
    Vector3.add_Metadata(builder, _MetadataOffset);
    Vector3.addX(builder, x);
    Vector3.addY(builder, y);
    Vector3.addZ(builder, z);
    return Vector3.endVector3(builder);
  };
  return Vector3;
})();
exports.Vector3 = Vector3;
