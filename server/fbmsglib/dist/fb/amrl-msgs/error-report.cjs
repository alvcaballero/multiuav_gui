'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.ErrorReport = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var header_js_1 = require('../../fb/std-msgs/header.cjs');
var ErrorReport = /** @class */ (function () {
  function ErrorReport() {
    this.bb = null;
    this.bb_pos = 0;
  }
  ErrorReport.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  ErrorReport.getRootAsErrorReport = function (bb, obj) {
    return (obj || new ErrorReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  ErrorReport.getSizePrefixedRootAsErrorReport = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new ErrorReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  ErrorReport.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  ErrorReport.prototype.header = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? (obj || new header_js_1.Header()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
  };
  ErrorReport.prototype.laserHeader = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? (obj || new header_js_1.Header()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
  };
  ErrorReport.prototype.severityLevel = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
  };
  ErrorReport.prototype.failedSubsystem = function () {
    var offset = this.bb.__offset(this.bb_pos, 12);
    return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
  };
  ErrorReport.prototype.detailedErrorMsg = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 14);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
  };
  ErrorReport.startErrorReport = function (builder) {
    builder.startObject(6);
  };
  ErrorReport.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  ErrorReport.addHeader = function (builder, headerOffset) {
    builder.addFieldOffset(1, headerOffset, 0);
  };
  ErrorReport.addLaserHeader = function (builder, laserHeaderOffset) {
    builder.addFieldOffset(2, laserHeaderOffset, 0);
  };
  ErrorReport.addSeverityLevel = function (builder, severityLevel) {
    builder.addFieldInt8(3, severityLevel, 0);
  };
  ErrorReport.addFailedSubsystem = function (builder, failedSubsystem) {
    builder.addFieldInt8(4, failedSubsystem, 0);
  };
  ErrorReport.addDetailedErrorMsg = function (builder, detailedErrorMsgOffset) {
    builder.addFieldOffset(5, detailedErrorMsgOffset, 0);
  };
  ErrorReport.endErrorReport = function (builder) {
    var offset = builder.endObject();
    builder.requiredField(offset, 6); // header
    builder.requiredField(offset, 8); // laser_header
    builder.requiredField(offset, 14); // detailed_error_msg
    return offset;
  };
  return ErrorReport;
})();
exports.ErrorReport = ErrorReport;
