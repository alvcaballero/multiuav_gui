'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.VisualizationMsg = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var colored_arc2_d_js_1 = require('../../fb/amrl-msgs/colored-arc2-d.cjs');
var colored_line2_d_js_1 = require('../../fb/amrl-msgs/colored-line2-d.cjs');
var colored_point2_d_js_1 = require('../../fb/amrl-msgs/colored-point2-d.cjs');
var path_visualization_js_1 = require('../../fb/amrl-msgs/path-visualization.cjs');
var pose2_df_js_1 = require('../../fb/amrl-msgs/pose2-df.cjs');
var header_js_1 = require('../../fb/std-msgs/header.cjs');
var VisualizationMsg = /** @class */ (function () {
  function VisualizationMsg() {
    this.bb = null;
    this.bb_pos = 0;
  }
  VisualizationMsg.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  VisualizationMsg.getRootAsVisualizationMsg = function (bb, obj) {
    return (obj || new VisualizationMsg()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  VisualizationMsg.getSizePrefixedRootAsVisualizationMsg = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new VisualizationMsg()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  VisualizationMsg.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  VisualizationMsg.prototype.header = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? (obj || new header_js_1.Header()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
  };
  VisualizationMsg.prototype.ns = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
  };
  VisualizationMsg.prototype.particles = function (index, obj) {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset
      ? (obj || new pose2_df_js_1.Pose2Df()).__init(
          this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4),
          this.bb
        )
      : null;
  };
  VisualizationMsg.prototype.particlesLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  VisualizationMsg.prototype.pathOptions = function (index, obj) {
    var offset = this.bb.__offset(this.bb_pos, 12);
    return offset
      ? (obj || new path_visualization_js_1.PathVisualization()).__init(
          this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4),
          this.bb
        )
      : null;
  };
  VisualizationMsg.prototype.pathOptionsLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 12);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  VisualizationMsg.prototype.points = function (index, obj) {
    var offset = this.bb.__offset(this.bb_pos, 14);
    return offset
      ? (obj || new colored_point2_d_js_1.ColoredPoint2D()).__init(
          this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4),
          this.bb
        )
      : null;
  };
  VisualizationMsg.prototype.pointsLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 14);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  VisualizationMsg.prototype.lines = function (index, obj) {
    var offset = this.bb.__offset(this.bb_pos, 16);
    return offset
      ? (obj || new colored_line2_d_js_1.ColoredLine2D()).__init(
          this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4),
          this.bb
        )
      : null;
  };
  VisualizationMsg.prototype.linesLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 16);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  VisualizationMsg.prototype.arcs = function (index, obj) {
    var offset = this.bb.__offset(this.bb_pos, 18);
    return offset
      ? (obj || new colored_arc2_d_js_1.ColoredArc2D()).__init(
          this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4),
          this.bb
        )
      : null;
  };
  VisualizationMsg.prototype.arcsLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 18);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  VisualizationMsg.startVisualizationMsg = function (builder) {
    builder.startObject(8);
  };
  VisualizationMsg.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  VisualizationMsg.addHeader = function (builder, headerOffset) {
    builder.addFieldOffset(1, headerOffset, 0);
  };
  VisualizationMsg.addNs = function (builder, nsOffset) {
    builder.addFieldOffset(2, nsOffset, 0);
  };
  VisualizationMsg.addParticles = function (builder, particlesOffset) {
    builder.addFieldOffset(3, particlesOffset, 0);
  };
  VisualizationMsg.createParticlesVector = function (builder, data) {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  };
  VisualizationMsg.startParticlesVector = function (builder, numElems) {
    builder.startVector(4, numElems, 4);
  };
  VisualizationMsg.addPathOptions = function (builder, pathOptionsOffset) {
    builder.addFieldOffset(4, pathOptionsOffset, 0);
  };
  VisualizationMsg.createPathOptionsVector = function (builder, data) {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  };
  VisualizationMsg.startPathOptionsVector = function (builder, numElems) {
    builder.startVector(4, numElems, 4);
  };
  VisualizationMsg.addPoints = function (builder, pointsOffset) {
    builder.addFieldOffset(5, pointsOffset, 0);
  };
  VisualizationMsg.createPointsVector = function (builder, data) {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  };
  VisualizationMsg.startPointsVector = function (builder, numElems) {
    builder.startVector(4, numElems, 4);
  };
  VisualizationMsg.addLines = function (builder, linesOffset) {
    builder.addFieldOffset(6, linesOffset, 0);
  };
  VisualizationMsg.createLinesVector = function (builder, data) {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  };
  VisualizationMsg.startLinesVector = function (builder, numElems) {
    builder.startVector(4, numElems, 4);
  };
  VisualizationMsg.addArcs = function (builder, arcsOffset) {
    builder.addFieldOffset(7, arcsOffset, 0);
  };
  VisualizationMsg.createArcsVector = function (builder, data) {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  };
  VisualizationMsg.startArcsVector = function (builder, numElems) {
    builder.startVector(4, numElems, 4);
  };
  VisualizationMsg.endVisualizationMsg = function (builder) {
    var offset = builder.endObject();
    builder.requiredField(offset, 6); // header
    builder.requiredField(offset, 8); // ns
    builder.requiredField(offset, 10); // particles
    builder.requiredField(offset, 12); // path_options
    builder.requiredField(offset, 14); // points
    builder.requiredField(offset, 16); // lines
    builder.requiredField(offset, 18); // arcs
    return offset;
  };
  return VisualizationMsg;
})();
exports.VisualizationMsg = VisualizationMsg;
