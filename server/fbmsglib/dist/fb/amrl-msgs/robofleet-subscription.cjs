'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.RobofleetSubscription = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var RobofleetSubscription = /** @class */ (function () {
  function RobofleetSubscription() {
    this.bb = null;
    this.bb_pos = 0;
  }
  RobofleetSubscription.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  RobofleetSubscription.getRootAsRobofleetSubscription = function (bb, obj) {
    return (obj || new RobofleetSubscription()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  RobofleetSubscription.getSizePrefixedRootAsRobofleetSubscription = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new RobofleetSubscription()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  RobofleetSubscription.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  RobofleetSubscription.prototype.topicRegex = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
  };
  RobofleetSubscription.prototype.action = function () {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
  };
  RobofleetSubscription.startRobofleetSubscription = function (builder) {
    builder.startObject(3);
  };
  RobofleetSubscription.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  RobofleetSubscription.addTopicRegex = function (builder, topicRegexOffset) {
    builder.addFieldOffset(1, topicRegexOffset, 0);
  };
  RobofleetSubscription.addAction = function (builder, action) {
    builder.addFieldInt8(2, action, 0);
  };
  RobofleetSubscription.endRobofleetSubscription = function (builder) {
    var offset = builder.endObject();
    builder.requiredField(offset, 6); // topic_regex
    return offset;
  };
  RobofleetSubscription.createRobofleetSubscription = function (builder, _MetadataOffset, topicRegexOffset, action) {
    RobofleetSubscription.startRobofleetSubscription(builder);
    RobofleetSubscription.add_Metadata(builder, _MetadataOffset);
    RobofleetSubscription.addTopicRegex(builder, topicRegexOffset);
    RobofleetSubscription.addAction(builder, action);
    return RobofleetSubscription.endRobofleetSubscription(builder);
  };
  return RobofleetSubscription;
})();
exports.RobofleetSubscription = RobofleetSubscription;
