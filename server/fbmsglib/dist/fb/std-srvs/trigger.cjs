'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.Trigger = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var trigger_request_js_1 = require('../../fb/std-srvs/trigger-request.cjs');
var trigger_response_js_1 = require('../../fb/std-srvs/trigger-response.cjs');
var Trigger = /** @class */ (function () {
  function Trigger() {
    this.bb = null;
    this.bb_pos = 0;
  }
  Trigger.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  Trigger.getRootAsTrigger = function (bb, obj) {
    return (obj || new Trigger()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  Trigger.getSizePrefixedRootAsTrigger = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new Trigger()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  Trigger.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Trigger.prototype.request = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset
      ? (obj || new trigger_request_js_1.TriggerRequest()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Trigger.prototype.response = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset
      ? (obj || new trigger_response_js_1.TriggerResponse()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Trigger.startTrigger = function (builder) {
    builder.startObject(3);
  };
  Trigger.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  Trigger.addRequest = function (builder, requestOffset) {
    builder.addFieldOffset(1, requestOffset, 0);
  };
  Trigger.addResponse = function (builder, responseOffset) {
    builder.addFieldOffset(2, responseOffset, 0);
  };
  Trigger.endTrigger = function (builder) {
    var offset = builder.endObject();
    return offset;
  };
  return Trigger;
})();
exports.Trigger = Trigger;
