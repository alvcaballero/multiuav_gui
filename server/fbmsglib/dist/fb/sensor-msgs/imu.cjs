'use strict';
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, '__esModule', { value: true });
exports.Imu = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require('flatbuffers');
var msg_metadata_js_1 = require('../../fb/msg-metadata.cjs');
var quaternion_js_1 = require('../../fb/geometry-msgs/quaternion.cjs');
var vector3_js_1 = require('../../fb/geometry-msgs/vector3.cjs');
var header_js_1 = require('../../fb/std-msgs/header.cjs');
var Imu = /** @class */ (function () {
  function Imu() {
    this.bb = null;
    this.bb_pos = 0;
  }
  Imu.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  };
  Imu.getRootAsImu = function (bb, obj) {
    return (obj || new Imu()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  Imu.getSizePrefixedRootAsImu = function (bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new Imu()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  };
  Imu.prototype._Metadata = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new msg_metadata_js_1.MsgMetadata()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Imu.prototype.header = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? (obj || new header_js_1.Header()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
  };
  Imu.prototype.orientation = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset
      ? (obj || new quaternion_js_1.Quaternion()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Imu.prototype.orientationCovariance = function (index) {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.readFloat64(this.bb.__vector(this.bb_pos + offset) + index * 8) : 0;
  };
  Imu.prototype.orientationCovarianceLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  Imu.prototype.orientationCovarianceArray = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset
      ? new Float64Array(
          this.bb.bytes().buffer,
          this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset),
          this.bb.__vector_len(this.bb_pos + offset)
        )
      : null;
  };
  Imu.prototype.angularVelocity = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 12);
    return offset
      ? (obj || new vector3_js_1.Vector3()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Imu.prototype.angularVelocityCovariance = function (index) {
    var offset = this.bb.__offset(this.bb_pos, 14);
    return offset ? this.bb.readFloat64(this.bb.__vector(this.bb_pos + offset) + index * 8) : 0;
  };
  Imu.prototype.angularVelocityCovarianceLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 14);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  Imu.prototype.angularVelocityCovarianceArray = function () {
    var offset = this.bb.__offset(this.bb_pos, 14);
    return offset
      ? new Float64Array(
          this.bb.bytes().buffer,
          this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset),
          this.bb.__vector_len(this.bb_pos + offset)
        )
      : null;
  };
  Imu.prototype.linearAcceleration = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 16);
    return offset
      ? (obj || new vector3_js_1.Vector3()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb)
      : null;
  };
  Imu.prototype.linearAccelerationCovariance = function (index) {
    var offset = this.bb.__offset(this.bb_pos, 18);
    return offset ? this.bb.readFloat64(this.bb.__vector(this.bb_pos + offset) + index * 8) : 0;
  };
  Imu.prototype.linearAccelerationCovarianceLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 18);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
  };
  Imu.prototype.linearAccelerationCovarianceArray = function () {
    var offset = this.bb.__offset(this.bb_pos, 18);
    return offset
      ? new Float64Array(
          this.bb.bytes().buffer,
          this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset),
          this.bb.__vector_len(this.bb_pos + offset)
        )
      : null;
  };
  Imu.startImu = function (builder) {
    builder.startObject(8);
  };
  Imu.add_Metadata = function (builder, _MetadataOffset) {
    builder.addFieldOffset(0, _MetadataOffset, 0);
  };
  Imu.addHeader = function (builder, headerOffset) {
    builder.addFieldOffset(1, headerOffset, 0);
  };
  Imu.addOrientation = function (builder, orientationOffset) {
    builder.addFieldOffset(2, orientationOffset, 0);
  };
  Imu.addOrientationCovariance = function (builder, orientationCovarianceOffset) {
    builder.addFieldOffset(3, orientationCovarianceOffset, 0);
  };
  Imu.createOrientationCovarianceVector = function (builder, data) {
    builder.startVector(8, data.length, 8);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addFloat64(data[i]);
    }
    return builder.endVector();
  };
  Imu.startOrientationCovarianceVector = function (builder, numElems) {
    builder.startVector(8, numElems, 8);
  };
  Imu.addAngularVelocity = function (builder, angularVelocityOffset) {
    builder.addFieldOffset(4, angularVelocityOffset, 0);
  };
  Imu.addAngularVelocityCovariance = function (builder, angularVelocityCovarianceOffset) {
    builder.addFieldOffset(5, angularVelocityCovarianceOffset, 0);
  };
  Imu.createAngularVelocityCovarianceVector = function (builder, data) {
    builder.startVector(8, data.length, 8);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addFloat64(data[i]);
    }
    return builder.endVector();
  };
  Imu.startAngularVelocityCovarianceVector = function (builder, numElems) {
    builder.startVector(8, numElems, 8);
  };
  Imu.addLinearAcceleration = function (builder, linearAccelerationOffset) {
    builder.addFieldOffset(6, linearAccelerationOffset, 0);
  };
  Imu.addLinearAccelerationCovariance = function (builder, linearAccelerationCovarianceOffset) {
    builder.addFieldOffset(7, linearAccelerationCovarianceOffset, 0);
  };
  Imu.createLinearAccelerationCovarianceVector = function (builder, data) {
    builder.startVector(8, data.length, 8);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addFloat64(data[i]);
    }
    return builder.endVector();
  };
  Imu.startLinearAccelerationCovarianceVector = function (builder, numElems) {
    builder.startVector(8, numElems, 8);
  };
  Imu.endImu = function (builder) {
    var offset = builder.endObject();
    builder.requiredField(offset, 6); // header
    builder.requiredField(offset, 8); // orientation
    builder.requiredField(offset, 10); // orientation_covariance
    builder.requiredField(offset, 12); // angular_velocity
    builder.requiredField(offset, 14); // angular_velocity_covariance
    builder.requiredField(offset, 16); // linear_acceleration
    builder.requiredField(offset, 18); // linear_acceleration_covariance
    return offset;
  };
  return Imu;
})();
exports.Imu = Imu;
